
# Set the prefix key to C-a instead of the default C-b
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set-option -g default-shell /bin/zsh
bind-key C-^ last-window 

# if multiple clients area attached to the same window, maximize it to the bigger one 
set-window-option -g aggressive-resize

# Start windows and pane numbering from 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

# re number windows when one is closed
set -g renumber-windows on 

# word separators for automatic word selection
setw -g word-separators ' @"()[]_-:,.'
setw -ag word-separators "'"

# show times longer than supposed
set -g display-panes-time 2000 

# tmux messages displaye for 4s 
set -g display-time 4000 

# n?vim compatibility
set -g default-terminal "${TERM}"
# set-option -g default-terminal "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "screen-256color"

# Source file 
unbind r 
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use vim keybindings in copy-mode
setw -g mode-keys vi

# Faster command seq
set -s escape-time 0

# have large history
set -g history-limit 1000

# Mouse mode on 
set -g mouse on 

# Border status for active pane
set -g pane-border-status top
set -g pane-border-format "#P: #{pane_current_command}"

# set Title
set -g set-titles on 
set -g set-titles-string "#T"

# disabled activity monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# equal resize all panes 
bind = select-layout even-horizontal
bind | select-layout even-vertical 
unbind % 
bind % split-window -h -c "#{pane_current_path}"

unbind '"'
bind '"' split-window -v -c "#{pane_current_path}"

unbind c
bind c new-window -c "#{pane_current_path}"

bind y setw synchronize-panes

# resize panes 
bind J resize-pane -D 10 
bind K resize-pane -U 10 
bind H resize-pane -L 10 
bind L resize-pane -R 10 

# select panes
bind j select-pane -D 
bind k select-pane -U 
bind h select-pane -L 
bind l select-pane -R 

# Settings for VI mode selection in copy-mode
unbind [
bind Escape copy-mode

unbind p
bind p paste-buffer
bind -T copy-mode-vi v send-keys -X begin-selection


bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind g new-window -n lazygit -c "#{pane_current_path}" "lazygit"
bind b new-window -n btop -c "#{pane_current_path}" "btop"
bind-key o command-prompt -p "open app: " "new-window '%%'"

# move statusbar to top
bind-key C-k run-shell "tmux set-option -g status-position top;"

# move statusbar to bottom
bind-key C-j run-shell "tmux set-option -g status-position bottom;"


set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'yardnsm/tmux-1password'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @continuum-restore 'on'
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux

if-shell "[ -z \"$TMUX_MINIMAL\" ]" {
  set -g status on
} {
  set -g status off
  set-hook -g after-new-window      'if "[ #{session_windows} -gt 1 ]" "set status on"'
  set-hook -g after-kill-pane       'if "[ #{session_windows} -lt 2 ]" "set status off"'
  set-hook -g pane-exited           'if "[ #{session_windows} -lt 2 ]" "set status off"'
  set-hook -g window-layout-changed 'if "[ #{session_windows} -lt 2 ]" "set status off"'
}

if-shell '[ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" = "Dark" ]' \
  'source-file "$HOME/.tmux/themes/catppuccin/mocha.conf"' \
  'source-file "$HOME/.tmux/themes/catppuccin/latte.conf"'
source-file "$HOME/.tmux/themes/catppuccin.conf"

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
set-environment -g PATH "/opt/homebrew/bin:/usr/local/bin:/bin:/usr/bin"

run '~/.tmux/plugins/tpm/tpm'

